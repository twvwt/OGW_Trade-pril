import os
from dotenv import load_dotenv
from aiogram import Bot, Dispatcher, types
from aiogram.filters import CommandStart
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")

# –ü–∞—Ä—Å–∏–Ω–≥ –∞–¥–º–∏–Ω–æ–≤ –∏–∑ .env
def parse_admins(env_var):
    admins = {}
    for pair in os.getenv(env_var, "").split(","):
        if not pair.strip():
            continue
        user_id, name = pair.strip().split(":")
        admins[int(user_id)] = name
    return admins

SUPERADMINS = parse_admins("SUPERADMINS")
ADMINS = parse_admins("ADMINS")

# –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Å—ã–ª–æ–∫ –∏–∑ .env
ADMIN_PANEL_URL = os.getenv("ADMIN_PANEL_URL")
SUPERADMIN_PANEL_URL = os.getenv("SUPERADMIN_PANEL_URL")
SHOP_URL = os.getenv("SHOP_URL")

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∞
def get_superadmin_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", web_app=types.WebAppInfo(url=ADMIN_PANEL_URL)),
            InlineKeyboardButton(text="–ü–∞–Ω–µ–ª—å —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∞", web_app=types.WebAppInfo(url=SUPERADMIN_PANEL_URL)),
        ],
        [
            InlineKeyboardButton(text="–ú–∞–≥–∞–∑–∏–Ω", web_app=types.WebAppInfo(url=SHOP_URL)),
        ]
    ])

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∞–¥–º–∏–Ω–∞
def get_admin_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", web_app=types.WebAppInfo(url=ADMIN_PANEL_URL)),
        ],
        [
            InlineKeyboardButton(text="–ú–∞–≥–∞–∑–∏–Ω", web_app=types.WebAppInfo(url=SHOP_URL)),
        ]
    ])

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def get_user_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="–ú–∞–≥–∞–∑–∏–Ω", web_app=types.WebAppInfo(url=SHOP_URL)),
        ]
    ])

@dp.message(CommandStart())
async def start(message: types.Message):
    user_id = message.from_user.id
    user_name = message.from_user.first_name

    if user_id in SUPERADMINS:
        admin_name = SUPERADMINS[user_id]
        await message.answer(
            f"üëë –ü—Ä–∏–≤–µ—Ç, **–°—É–ø–µ—Ä–∞–¥–º–∏–Ω {admin_name}**!",
            reply_markup=get_superadmin_keyboard(),
            parse_mode="Markdown"
        )
    elif user_id in ADMINS:
        admin_name = ADMINS[user_id]
        await message.answer(
            f"üõ† –ü—Ä–∏–≤–µ—Ç, **–ê–¥–º–∏–Ω {admin_name}**!",
            reply_markup=get_admin_keyboard(),
            parse_mode="Markdown"
        )
    else:
        await message.answer(
            f"üõç –ü—Ä–∏–≤–µ—Ç, **{user_name}**! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω!",
            reply_markup=get_user_keyboard(),
            parse_mode="Markdown"
        )

if __name__ == "__main__":
    dp.run_polling(bot)